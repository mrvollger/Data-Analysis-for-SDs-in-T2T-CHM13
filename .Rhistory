df = fread("seqwish_out/binned_50.tbl")
df$pos = df$bin*50
df$color = make_cuts_for_colors(df$mean.cov)
small = df[df$pos > 125000 & df$pos< 140000]
tmp = data.table(group_by(small, path.name) %>% summarize(mean = mean(mean.cov)))
tmp = tmp[order(-mean),]
small$path.name = factor(small$path.name, tmp$path.name)
p1 = ggplot(data=small) +
geom_raster(aes(y=path.name, x=pos, fill=color)) +
theme_classic() +
scale_fill_brewer(palette = "Spectral", direction=-1)
p1
inf
INF
Inf
make_cuts_for_colors<-function(mycol){
ncolors  = 9 # max value is 9
# color hors by quartiles of the data
bot = floor(min(mycol)); top = ceiling(max(mycol))
breaks = unique( c(quantile(mycol[mycol > 2], probs = seq(0, 1, by = 1/ncolors))) )
breaks = c(0, 1, 2, breaks)
breaks = c(seq(0,10), Inf)
#breaks = seq(bot, top, by = (top-bot)/ncolors)
print(breaks)
labels = seq(length(breaks)-1)
rtn <- cut(mycol,
breaks=breaks,
include.lowest=TRUE)
print(unique(rtn))
return(rtn)
}
df$color = make_cuts_for_colors(df$mean.cov)
df = fread("seqwish_out/binned_50.tbl")
df$pos = df$bin*50
df$color = make_cuts_for_colors(df$mean.cov)
small = df[df$pos > 125000 & df$pos< 140000]
tmp = data.table(group_by(small, path.name) %>% summarize(mean = mean(mean.cov)))
tmp = tmp[order(-mean),]
small$path.name = factor(small$path.name, tmp$path.name)
p1 = ggplot(data=small) +
geom_raster(aes(y=path.name, x=pos, fill=color)) +
theme_classic() +
scale_fill_brewer(palette = "Spectral", direction=-1)
p1
source('~/Desktop/EichlerVolumes/vol27/projects/targeted_hifi_asm/nobackups/lpa_asm/Targeted_HiFi_Asm/old_scripts/seqwish/vizbins.R', echo=TRUE)
make_cuts_for_colors<-function(mycol){
ncolors  = 8 # max value is 8
# color hors by quartiles of the data
bot = floor(min(mycol)); top = ceiling(max(mycol))
breaks = unique( c(quantile(mycol[mycol > 2], probs = seq(0, 1, by = 1/ncolors))) )
breaks = c(0, 1, 2, breaks)
#breaks = c(seq(0,10), Inf)
#breaks = seq(bot, top, by = (top-bot)/ncolors)
print(breaks)
labels = seq(length(breaks)-1)
rtn <- cut(mycol,
breaks=breaks,
include.lowest=TRUE)
print(unique(rtn))
return(rtn)
}
df$pos = df$bin*10
df$color = make_cuts_for_colors(df$mean.cov)
small = df[df$pos > 130000 & df$pos< 138000]
tmp = data.table(group_by(small, path.name) %>% summarize(mean = mean(mean.cov)))
tmp = tmp[order(-mean),]
small$path.name = factor(small$path.name, tmp$path.name)
p2 = ggplot(data=small) +
geom_raster(aes(y=path.name, x=pos, fill=color)) +
theme_classic() +
scale_fill_brewer(palette = "Spectral", direction=-1)
p2
df$pos = df$bin*10
df$color = make_cuts_for_colors(df$mean.cov)
small = df[df$pos > 130000 & df$pos< 138000]
tmp = data.table(group_by(small, path.name) %>% summarize(mean = mean(mean.cov)))
tmp = tmp[order(-mean),]
small$path.name = factor(small$path.name, tmp$path.name)
small$color = make_cuts_for_colors(small$mean.cov)
p2 = ggplot(data=small) +
geom_raster(aes(y=path.name, x=pos, fill=color)) +
theme_classic() +
scale_fill_brewer(palette = "Spectral", direction=-1)
p2
make_cuts_for_colors<-function(mycol){
ncolors  = 7 # max value is 7 (3 re reserved)
# color hors by quartiles of the data
bot = floor(min(mycol)); top = ceiling(max(mycol))
breaks = unique( c(quantile(mycol[mycol > 3], probs = seq(0, 1, by = 1/ncolors))) )
breaks = c(0, 1, 2, 3, breaks)
#breaks = c(seq(0,10), Inf)
#breaks = seq(bot, top, by = (top-bot)/ncolors)
print(breaks)
labels = seq(length(breaks)-1)
rtn <- cut(mycol,
breaks=breaks,
include.lowest=TRUE)
print(unique(rtn))
return(rtn)
}
df$color = make_cuts_for_colors(df$mean.cov)
df$pos = df$bin*10
df$color = make_cuts_for_colors(df$mean.cov)
small = df[df$pos > 130000 & df$pos< 138000]
tmp = data.table(group_by(small, path.name) %>% summarize(mean = mean(mean.cov)))
tmp = tmp[order(-mean),]
small$path.name = factor(small$path.name, tmp$path.name)
p2 = ggplot(data=small) +
geom_raster(aes(y=path.name, x=pos, fill=color)) +
theme_classic() +
scale_fill_brewer(palette = "Spectral", direction=-1)
p2
df = fread("seqwish_out/binned_1.tbl")
df$pos = df$bin*10
df$color = make_cuts_for_colors(df$mean.cov)
small = df[df$pos > 130000 & df$pos< 138000]
tmp = data.table(group_by(small, path.name) %>% summarize(mean = mean(mean.cov)))
tmp = tmp[order(-mean),]
small$path.name = factor(small$path.name, tmp$path.name)
p2 = ggplot(data=small) +
geom_raster(aes(y=path.name, x=pos, fill=color)) +
theme_classic() +
scale_fill_brewer(palette = "Spectral", direction=-1)
p2
df$pos = df$bin*1
df$color = make_cuts_for_colors(df$mean.cov)
small = df[df$pos > 130000 & df$pos< 138000]
tmp = data.table(group_by(small, path.name) %>% summarize(mean = mean(mean.cov)))
tmp = tmp[order(-mean),]
small$path.name = factor(small$path.name, tmp$path.name)
p2 = ggplot(data=small) +
geom_raster(aes(y=path.name, x=pos, fill=color)) +
theme_classic() +
scale_fill_brewer(palette = "Spectral", direction=-1)
p2
ggsave("zoom_bins_1.png", plot=p2, width = 16, height = 9)
#!/usr/bin/env Rscript
library(ggplot2)
library(scales)
library(RColorBrewer)
#library(dplyr)
library(grid)
#library(gridBase)
library(gridExtra)
library(data.table)
library(gtable)
#source("http://bioconductor.org/biocLite.R")
#biocLite("karyoploteR")
#BiocManager::install("karyoploteR")
library(karyoploteR)
library(GenomicRanges)
library(cowplot)
library(glue)
#suppressPackageStartupMessages(library("argparse"))
#library(argparse)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
collapse = fread("collapse.hg002.tbl")
ggplot(collapse) + geom_bar(aes(x=File, y=Expanded_Mbp), stat = "identity")
ggplot(collapse) + geom_bar(aes(x=File, y=Expanded_Mbp), stat = "identity") +theme_cowplot()
unique(collapse$File)
collapse = factor(collapse$File, levels = unique(collapse$File))
ggplot(collapse) + geom_bar(aes(x=File, y=Expanded_Mbp), stat = "identity") +theme_cowplot()
collapse = fread("collapse.hg002.tbl")
collapse = factor(collapse$File, levels = unique(collapse$File))
ggplot(collapse) + geom_bar(aes(x=File, y=Expanded_Mbp), stat = "identity") +theme_cowplot()
collapse = fread("collapse.hg002.tbl")
collapse$id = factor(collapse$File, levels = unique(collapse$File))
ggplot(collapse) + geom_bar(aes(x=id, y=Expanded_Mbp), stat = "identity") +theme_cowplot()
ggplot(collapse) + geom_bar(aes(x=id, y=Expanded_Mbp, color=Expanded_Mbp), stat = "identity") +theme_cowplot()
ggplot(collapse) + geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +theme_cowplot()
ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_brewer() +
theme_cowplot()
ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous() +
theme_cowplot()
ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous(1) +
theme_cowplot()
ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous(2) +
theme_cowplot()
?scale_fill_continuous
ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous(type = "viridis") +
theme_cowplot()
ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous(palette = "Spectral") +
theme_cowplot()
ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous(type = "Spectral") +
theme_cowplot()
ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous() +
theme_cowplot()
source('~/Desktop/EichlerVolumes/vol26/projects/koren_hifi_asm/nobackups/CHM13_quickmerge/ideogram.R', echo=TRUE)
collapse = fread("collapse.hg002.tbl")
collapse$id = factor(collapse$File, levels = unique(collapse$File))
ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis") +
theme_cowplot()
dev.off()
collapse = fread("collapse.hg002.tbl")
collapse$id = factor(collapse$File, levels = unique(collapse$File))
ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis") +
theme_cowplot()
ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis") +
theme_cowplot(18)
collapse = fread("collapse.hg002.tbl")
collapse$id = factor(collapse$File, levels = unique(collapse$File))
ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis") +
theme_cowplot(18) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
collapse
ggplot(collapse) +
geom_bar(aes(x=id, y=Collapsed_Mbp, fill=Collapsed_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis") +
theme_cowplot(18) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
""
collapse
ggplot(collapse) +
geom_bar(aes(x=id, y=Collapses_Mbp, fill=Collapses_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis") +
theme_cowplot(18) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
c2= ggplot(collapse) +
geom_bar(aes(x=id, y=Collapses_Mbp, fill=Collapses_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis") +
theme_cowplot(18) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.text = NA)
c2= ggplot(collapse) +
geom_bar(aes(x=id, y=Collapses_Mbp, fill=Collapses_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis") +
theme_cowplot(18) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.text = NA); c2
c2= ggplot(collapse) +
geom_bar(aes(x=id, y=Collapses_Mbp, fill=Collapses_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis") +
theme_cowplot(18) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.text = NULL); c2
c2= ggplot(collapse) +
geom_bar(aes(x=id, y=Collapses_Mbp, fill=Collapses_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis") +
theme_cowplot(18) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.text = ""); c2
c2= ggplot(collapse) +
geom_bar(aes(x=id, y=Collapses_Mbp, fill=Collapses_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis") +
theme_cowplot(18) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.text = element_text()); c2
c2= ggplot(collapse) +
geom_bar(aes(x=id, y=Collapses_Mbp, fill=Collapses_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis") +
theme_cowplot(18) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.text = element_text("NA")); c2
c2= ggplot(collapse) +
geom_bar(aes(x=id, y=Collapses_Mbp, fill=Collapses_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis") +
theme_cowplot(18) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="bottom"); c2
c2= ggplot(collapse) +
geom_bar(aes(x=id, y=Collapses_Mbp, fill=Collapses_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis", name="") +
theme_cowplot(18) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position="top"); c2
c1 = ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis", name="") +
theme_cowplot(18) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position="top"); c1
ggsave("expanded.pdf", height=16, width =9, plot=c1)
ggsave("collapsed.pdf", height=16, width =9, plot=c2)
ggsave("expanded.pdf", height=9, width =16, plot=c1)
ggsave("collapsed.pdf", height=9, width =16, plot=c2)
c1 = ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis", name="") +
theme_cowplot(24) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position="top"); c1
c2= ggplot(collapse) +
geom_bar(aes(x=id, y=Collapses_Mbp, fill=Collapses_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis", name="") +
theme_cowplot(24) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position="top"); c2
ggsave("expanded.pdf", height=9, width =16, plot=c1)
ggsave("collapsed.pdf", height=9, width =16, plot=c2)
source('~/Desktop/EichlerVolumes/vol26/projects/koren_hifi_asm/nobackups/CHM13_quickmerge/ideogram.R', echo=TRUE)
dev.off()
collapse = fread("collapse.hg002.tbl")
collapse$id = factor(collapse$File, levels = unique(collapse$File))
c1 = ggplot(collapse) +
geom_bar(aes(x=id, y=Expanded_Mbp, fill=Expanded_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis", name="") +
theme_cowplot(24) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position="top"); c1
c2= ggplot(collapse) +
geom_bar(aes(x=id, y=Collapses_Mbp, fill=Collapses_Mbp), stat = "identity") +
scale_fill_continuous(type="viridis", name="") +
theme_cowplot(24) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position="top"); c2
ggsave("expanded.pdf", height=8, width =16, plot=c1)
ggsave("collapsed.pdf", height=8, width =16, plot=c2)
ggsave("expanded.png", height=8, width =16, plot=c1)
ggsave("collapsed.png", height=8, width =16, plot=c2)
?plotKaryotype
#!/usr/bin/env Rscript
library(ggplot2)
library(scales)
library(RColorBrewer)
library(dplyr)
library(grid)
#library(gridBase)
library(gridExtra)
library(data.table)
library(gtable)
#source("http://bioconductor.org/biocLite.R")
#biocLite("karyoploteR")
#BiocManager::install("karyoploteR")
library(karyoploteR)
library(GenomicRanges)
library(cowplot)
library(glue)
library(ggplotify)
#suppressPackageStartupMessages(library("argparse"))
#library(argparse)
keep = c("merged00000002","tig00008002_q_00005956","tig00018105_q_00007063" )
?plotKaryotyp
?plotKaryotype
source('~/Desktop/EichlerVolumes/vol27/projects/targeted_hifi_asm/nobackups/lpa_asm/Targeted_HiFi_Asm/old_scripts/plot.R', echo=TRUE)
install.packages("ggrepel")
source('~/Desktop/EichlerVolumes/vol27/projects/targeted_hifi_asm/nobackups/lpa_asm/Targeted_HiFi_Asm/old_scripts/plot.R', echo=TRUE)
DIR="~/Desktop/EichlerVolumes/vol27/projects/targeted_hifi_asm/nobackups/lpa_asm/Targeted_HiFi_Asm/old_scripts/"
df = fread(glue("{DIR}/repeat_lengths.tbl"))
df$lab=as.character(lapply(df$contig, function(x) sub("__.*", "", x)))
colors = c("#A20021", "#3F88C5", "#59CD90")
names(colors) = c("chm13_hicanu_hifii_20k", "chm13_canu_UL", "chm13_peregrine_hifi_20k")
ordering = data.table(df %>% group_by(contig) %>% summarise(sum=sum(cn)))
df$contig = factor(df$contig, levels = ordering$contig[order(-ordering$sum)]  )
df$motif_len = df$length/df$cn
long = melt(setDT(df))
p1 = ggplot(data=df, aes(y=aa_length, x=cn, color=lab, label=lab)) + geom_point( size = 5, alpha=0.75) +
theme_classic() + theme(legend.position="none", axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text_repel(nudge_y=3*max(df$aa_length)/max(df$cn)) +
xlim(4, NA); p1
p2 = ggplot(data=df, aes(y=length, x=cn, color=lab,label=lab) ) + geom_point(size = 5, alpha=0.75) +
theme_classic() + theme(legend.position="none", axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text_repel(nudge_y=3*max(df$length)/max(df$cn)) +
xlim(4, NA); p2
p2 = ggplot(data=df, aes(y=length, x=cn, color=lab,label=lab) ) + geom_point(size = 5, alpha=0.75) +
theme_classic() + theme(legend.position="none", axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_text_repel(nudge_y=3*max(df$length)/max(df$cn)) +
xlab("Kringle IV_2") + ylab("Assembly Length") +
xlim(4, NA); p2
source('~/Desktop/EichlerVolumes/vol27/projects/targeted_hifi_asm/nobackups/lpa_asm/Targeted_HiFi_Asm/old_scripts/plot.R', echo=TRUE)
source('~/Desktop/EichlerVolumes/vol27/projects/targeted_hifi_asm/nobackups/lpa_asm/Targeted_HiFi_Asm/old_scripts/plot.R', echo=TRUE)
#ggsave(glue("{DIR}/new_aa_vs_cn.png"), plot = p1, height = 9/2, width = 16/2)
ggsave(glue("{DIR}/new_length_vs_cn.png"), plot = p2, height = 9/2, width = 16/2)
p2
DIR="~/Desktop/EichlerVolumes/vol27/projects/targeted_hifi_asm/nobackups/lpa_asm/Targeted_HiFi_Asm/old_scripts/"
p2
#ggsave(glue("{DIR}/new_aa_vs_cn.png"), plot = p1, height = 9/2, width = 16/2)
ggsave(glue("{DIR}/new_length_vs_cn.png"), plot = p2, height = 9/2, width = 16/2)
source('~/Desktop/EichlerVolumes/vol27/projects/targeted_hifi_asm/nobackups/lpa_asm/Targeted_HiFi_Asm/old_scripts/plot.R', echo=TRUE)
#ggsave(glue("{DIR}/new_aa_vs_cn.png"), plot = p1, height = 9/2, width = 16/2)
ggsave(glue("{DIR}/new_length_vs_cn.png"), plot = p2, height = 9, width = 16)
source('~/Desktop/EichlerVolumes/vol27/projects/targeted_hifi_asm/nobackups/lpa_asm/Targeted_HiFi_Asm/old_scripts/plot.R', echo=TRUE)
#ggsave(glue("{DIR}/new_aa_vs_cn.png"), plot = p1, height = 9/2, width = 16/2)
ggsave(glue("{DIR}/new_length_vs_cn.png"), plot = p2, height = 16, width = 16)
#ggsave(glue("{DIR}/new_aa_vs_cn.png"), plot = p1, height = 9/2, width = 16/2)
ggsave(glue("{DIR}/new_length_vs_cn.png"), plot = p2, height = 16, width = 16)
#ggsave(glue("{DIR}/new_aa_vs_cn.png"), plot = p1, height = 9/2, width = 16/2)
ggsave(glue("{DIR}/new_length_vs_cn.png"), plot = p2, height = 9, width = 16)
#ggsave(glue("{DIR}/new_aa_vs_cn.png"), plot = p1, height = 9/2, width = 16/2)
ggsave(glue("{DIR}/new_length_vs_cn.png"), plot = p2, height = 9/1.5, width = 16/1.5)
#ggsave(glue("{DIR}/new_aa_vs_cn.png"), plot = p1, height = 9/2, width = 16/2)
ggsave(glue("{DIR}/new_length_vs_cn.png"), plot = p2, height = 9/1.5, width = 16/1.5)
#ggsave(glue("{DIR}/new_aa_vs_cn.png"), plot = p1, height = 9/2, width = 16/2)
ggsave(glue("{DIR}/new_length_vs_cn.png"), plot = p2, height = 9/2, width = 16/2)
#ggsave(glue("{DIR}/new_aa_vs_cn.png"), plot = p1, height = 9/2, width = 16/2)
ggsave(glue("{DIR}/new_length_vs_cn.png"), plot = p2, height = 9/1.5, width = 16/1.5)
source('~/Desktop/EichlerVolumes/vol27/projects/targeted_hifi_asm/nobackups/lpa_asm/Targeted_HiFi_Asm/old_scripts/plot.R', echo=TRUE)
#!/usr/bin/env Rscript
library(ggplot2)
library(scales)
library(RColorBrewer)
library(dplyr)
library(grid)
#library(gridBase)
library(gridExtra)
library(data.table)
library(gtable)
#source("http://bioconductor.org/biocLite.R")
#biocLite("karyoploteR")
#BiocManager::install("karyoploteR")
library(karyoploteR)
library(GenomicRanges)
library(cowplot)
library(glue)
library(ggplotify)
## install
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Hsapiens.UCSC.hg38.knownGene")
## load the library
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
## show the db object that is loaded by calling it's name
kpg = plotKaryotype(chr="chr1", zoom = "chr1:146,146,203-146,229,026")
kpPlotGenes(kpg, data=TxDb.Hsapiens.UCSC.hg38.knownGene)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)
source('~/Desktop/EichlerVolumes/chm13_t2t/nobackups/plots/load_data.R', echo=TRUE)
ggplot(data=SEDEF)+
geom_density(x=fracMatch)+
facet_grid(chr ~ chr2)
SEDEF
SEDEF$fracMatch
ggplot(data=SEDEF)+
geom_density(aes(x=fracMatch))+
facet_grid(chr ~ chr2)
p=ggplot(data=SEDEF)+
geom_density(aes(x=fracMatch))+
facet_grid(chr ~ chr2) + theme_cowplot()
ggsave("~/Desktop/tmp.pdf", height = 40, width = 40, plot = p)
p=ggplot(data=SEDEF)+
geom_bar(aes(x=sum(alingB)))+
facet_grid(chr ~ chr2) + theme_cowplot()
SEDEF
p=ggplot(data=SEDEF)+
geom_bar(aes(x=sum(matchB + mismatchB, y = mean(aln_len) )))+
facet_grid(chr ~ chr2) + theme_cowplot()
p=ggplot(data=SEDEF)+
geom_bar(aes(x=sum(matchB + mismatchB), y = mean(aln_len), color = (matchB + mismatchB)))+
scale_x_continuous(trans="log10") + scale_y_continuous(trans="log10") +
facet_grid(chr ~ chr2) + theme_cowplot(); p
p=ggplot(data=SEDEF)+
geom_bar(aes(x=sum(matchB + mismatchB), color = (matchB + mismatchB)))+
scale_x_continuous(trans="log10") #+ scale_y_continuous(trans="log10") +
p=ggplot(data=SEDEF)+
geom_bar(aes(x=sum(matchB + mismatchB), color = (matchB + mismatchB)))+
scale_x_continuous(trans="log10") + # scale_y_continuous(trans="log10") +
facet_grid(chr ~ chr2) + theme_cowplot(); p
ggsave("~/Desktop/n_mbp.pdf", height = 40, width = 40, plot = p)
p=ggplot(data=SEDEF)+
geom_bar(aes(x=sum(matchB + mismatchB), color = sum(matchB + mismatchB)))+
scale_x_continuous(trans="log10", labels = comma) + # scale_y_continuous(trans="log10") +
facet_grid(chr ~ chr2) + theme_cowplot(); p
ggsave("~/Desktop/n_mbp.pdf", height = 40, width = 40, plot = p)
p=ggplot(data=SEDEF %>% group_by(chr, chr2) %>% summarise(bp_aligned = sum(matchB + mismatchB) ))+
geom_bar(aes(x=bp_aligned, color = bp_aligned))+
scale_x_continuous(trans="log10", labels = comma) + # scale_y_continuous(trans="log10") +
facet_grid(chr ~ chr2) + theme_cowplot(); p
ggsave("~/Desktop/n_mbp.pdf", height = 40, width = 40, plot = p)
SEDEF %>%
group_by(chr,
SEDEF %>%
group_by(chr, chr2) %>% summarise(bp_aligned = sum(matchB + mismatchB))
SEDEF %>%
group_by(chr, chr2) %>% summarise(bp_aligned = sum(matchB + mismatchB))
SEDEF %>%
group_by(chr, chr2) %>% summarise(bp_aligned = sum(matchB + mismatchB))
p=ggplot(data=SEDEF %>%
group_by(chr, chr2) %>% summarise(bp_aligned = sum(matchB + mismatchB))
)+
geom_bar(aes(y=bp_aligned, x=0, color = bp_aligned))+
#scale_x_continuous(trans="log10", labels = comma) +
scale_y_continuous(trans="log10", labels = comma) +
facet_grid(chr ~ chr2) + theme_cowplot(); p
p=ggplot(data=SEDEF %>%
group_by(chr, chr2) %>% summarise(bp_aligned = sum(matchB + mismatchB))
)+
geom_bar(aes(y=bp_aligned, x="bp", color = bp_aligned))+
#scale_x_continuous(trans="log10", labels = comma) +
scale_y_continuous(trans="log10", labels = comma) +
facet_grid(chr ~ chr2) + theme_cowplot(); p
p=ggplot(data=SEDEF %>%
group_by(chr, chr2) %>% summarise(bp_aligned = sum(matchB + mismatchB))
)+
geom_bar(aes(y=bp_aligned, group="bp", color = bp_aligned))+
#scale_x_continuous(trans="log10", labels = comma) +
scale_y_continuous(trans="log10", labels = comma) +
facet_grid(chr ~ chr2) + theme_cowplot(); p
ggsave("~/Desktop/n_mbp.pdf", height = 40, width = 40, plot = p)
sds = SEDEF[original]
sds = SEDEF[original,]
sds = SEDEF[original,]
sds = SEDEF[origin,]
SEDEF
sds = SEDEF[original,]
sds = SEDEF[SSEDEF$original,]
sds = SEDEF[SEDEF$original,]
sds
sds$new = overlap_either(sds, NEW)
sds$new
describe(sds$new)
desciption(sds$new)
sds$new %>% group_by(new) %>% summarise(n())
sds %>% group_by(new) %>% summarise(n())
